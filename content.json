{"meta":{"title":"Macix's Awesome Site","subtitle":"Be You want to be.","description":null,"author":"Macix","url":"http://melifesoftware.github.io","root":"/"},"pages":[{"title":"about","date":"2019-04-09T08:26:45.000Z","updated":"2019-04-09T08:56:34.922Z","comments":true,"path":"about/index.html","permalink":"http://melifesoftware.github.io/about/index.html","excerpt":"","text":"为什么写这个Blog以前确实还是很天真，觉得自己的记忆力很好，写过的代码可以过目不忘，就没怎么进行记录，就算记录也是流水账类型的，不长久，过不多久就忘了。而且学的东西太多太杂，知识的广度有了，但所有的东西都没有涉及到一定的深度，知识不成体系，后面项目用到的话还是需要重新学习，成本太高。 自我介绍一个奋斗在考研前线的计算机考研狗。 此博客诞生于一个不想看书的下午…."},{"title":"tags","date":"2019-04-11T02:23:54.000Z","updated":"2019-04-11T02:23:54.604Z","comments":true,"path":"tags/index.html","permalink":"http://melifesoftware.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"【考研】一次总结","slug":"【考研】一次总结","date":"2019-04-11T13:29:18.000Z","updated":"2019-04-11T14:19:16.590Z","comments":true,"path":"2019/04/11/【考研】一次总结/","link":"","permalink":"http://melifesoftware.github.io/2019/04/11/【考研】一次总结/","excerpt":"","text":"准备考研也有段时间了，昨天的周测搞得我心态有点爆炸，同时暴露出自己的很多问题，尤其是做题方面还有基础概念的理解，以及对时间分配等方面，这些问题也是我高中成绩始终无法提高的根本问题，下面针对这段时间暴露出的问题做个小总结，并针对这些问题。 暴露出的问题 做题太过功利化，为了做题而做题，有对作业的修正，但没有针对题型做出总结，导致连一些基础的题型的解题步骤在考试的时候都没有想到。 没有好好利用笔记和讲义，对笔记上例题，只知道一个大概，没有真正自己做过，老师讲过觉得自己听懂了 没有及时复习，这个是最大的问题，不管是做题还是听课，课后根本没有花过任何时间去复习，去总结，总是以为自己在做题，做题做的完全没有达到预想的效果，一些基础的套路题型没有总结过解题步骤，就算总结了也没有主动地去翻看过，导致考试的时候处于记得某一个步骤，但关键步骤忘记了的尴尬境地。 解决方案 每周的周五-周六两天时间定为每周的总结时间，需要完成以下任务 将本周所作的练习题中包括周测、课后习题 的错误的题，不会做的题重新做一遍 不会做的题指想了很久都不会做的，很久指思考8分钟以上毫无思路的题，或者有思路但解题时间超过20分钟的题 将本周复习的内容对应的讲义章节上的习题全部自己做一遍 建立一个套路笔记本呢，将当周复习完的章节的题目进行总结，将套路，规律，写到套路笔记本上 将当周复习章节的公式定理，知识体系进行整理，做到在不看书的情况下可以将本周复习章节的知识点进行罗列，包括公式、定理、公式推导，定理的推导现阶段不要求 花时间复习之前的总结笔记，包括错题本，讲义上的题，看题目想思路，思路不清晰的动手重新演算一遍，并记录到套路笔记本里。如果反复出现还是没有思路，则在套路笔记本上专门进行标注 不要拖延，不要颓废，让生活规律起来，每天十二点之前一定上床，起床时间定为早上七点，前后自由时间不能超过15分钟 行动至上，理性为王。","categories":[],"tags":[{"name":"考研","slug":"考研","permalink":"http://melifesoftware.github.io/tags/考研/"}]},{"title":"【AI学习笔记2】matplotlib学习记录","slug":"【AI学习笔记2】matplotlib学习记录","date":"2019-04-11T02:49:35.000Z","updated":"2019-04-11T03:26:07.535Z","comments":true,"path":"2019/04/11/【AI学习笔记2】matplotlib学习记录/","link":"","permalink":"http://melifesoftware.github.io/2019/04/11/【AI学习笔记2】matplotlib学习记录/","excerpt":"","text":"Matplotlib一图胜千言，有了数据处理工具，一个好的数据可视化的工具也是必不可少的。 简介Matplotlib是一个Python 2D绘图库，可以生成各种硬拷贝格式和跨平台交互式环境的出版物质量数据。Matplotlib可用于Python脚本，Python和IPython shell，Jupyter笔记本，Web应用程序服务器和四个图形用户界面工具包。 导入代码123import matplotlib.pyplot as pltimport numpy as np%matplotlib inline 一张图的构成部分抄一张官网的图 一张图的构成部分 绘图入门 绘图分为交互模式和非交互模式 12plt.ion() # 交互模式绘图, 适用于 jupyter模式下 绘图plt.ioff() # 关闭交互模式 12345678910# 大部分的 绘图需要指定 x,y 坐标点集x = np.linspace(0,100,100) # 生成一些点y = x ** 2plt.title('test') # 指定当前绘图的标题plt.plot(x, y, label='legend title') # 绘图并设置图例标题plt.legend() # 开启显示图例plt.grid() # 显示坐标轴网格plt.show() # 显示图像# 如果只是yi'wei","categories":[],"tags":[{"name":"DL","slug":"DL","permalink":"http://melifesoftware.github.io/tags/DL/"}]},{"title":"【AI学习笔记1】Numpy 学习记录","slug":"【AI学习笔记1】Numpy-学习记录","date":"2019-04-09T09:12:06.000Z","updated":"2019-04-09T09:49:14.314Z","comments":true,"path":"2019/04/09/【AI学习笔记1】Numpy-学习记录/","link":"","permalink":"http://melifesoftware.github.io/2019/04/09/【AI学习笔记1】Numpy-学习记录/","excerpt":"","text":"导入matplotlib 并 在线绘图 123import mathplotlib.pyplot as plotimport numpy as np%matplotlib online ## 在线绘图 numpy numpy库的常用函数 1234567891011121314151617# 数学函数np.sin() #计算矩阵每个值 的sin,并返回，矩阵的shape 不变np.cos() #类似sin# 生成常用arraynp.repeat(1, 10) # 产生有10个1 的 arraynp.arange() #产生一个 行数为 n 的array, 可以设置起始和结束以及步长np.arange() # 生成按顺序的1行矩阵np.eye() #生成单位阵np.empty()#创建一个空阵np.diag([1,2,3]) #从一个一维矩阵创建一个对角阵, 对角线上为 1,2,3np.linespace(0, 2*np.pi,100) #创建在一个范围内均分的矩阵,在 0 到 2pi 范围内均匀取 100个点# ndarray对象常用操作方法 ndarray是 numpy 返回的 用于表示矩阵的对象，但其实是数组 numpy提供专有的matrix 对象，matrix 可以 求 逆矩阵，共轭矩阵， 1234567891011121314arr = np.arange(100) #构造一个 1 行 100 列的矩阵，从 0 到 100arr.resharp(2, 50) #将 arr 变换成 2 行 50 列的矩阵,当已经指定行时 列的值可以设置为-1，这样会自动计算需要的列数arr.shape #arr 的形状arr.size #arr 所占用的空间arr.dtype #arr 的数据类型 # 数据类型转换 不能直接修改 dtype , dtype 只是一个标记 表明以何种类型显示内存中的数据# 比如 float32 类型的转换为 int8 后 size会增加4倍arr.astype(np.float32)#arr 的数据类型转换为 float32# 转换成矩阵mat = np.asmatrix(arr)arr.T #取转置，# numpy 的 matrix对象操作 1234567891011121314mat = np.matrix('1,2,3;1,2,3') #从字符串创建一个矩阵'''输出, 2行3列的矩阵matrix([[1, 2, 3], [1, 2, 3]])'''mat.I #矩阵的逆阵mat.H #矩阵的共轭mat.T #矩阵的转置# 矩阵的算术操作# + - * # 矩阵转换为数组arr = np.asarray(mat)","categories":[],"tags":[{"name":"DL","slug":"DL","permalink":"http://melifesoftware.github.io/tags/DL/"}]},{"title":"post title","slug":"post-title","date":"2019-04-08T16:35:55.000Z","updated":"2019-04-08T16:38:29.990Z","comments":true,"path":"2019/04/09/post-title/","link":"","permalink":"http://melifesoftware.github.io/2019/04/09/post-title/","excerpt":"","text":"hello","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://melifesoftware.github.io/tags/python/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-04-08T16:32:03.795Z","updated":"2019-04-11T12:07:43.209Z","comments":true,"path":"2019/04/09/hello-world/","link":"","permalink":"http://melifesoftware.github.io/2019/04/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}